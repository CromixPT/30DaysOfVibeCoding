// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoodTracker.Infrastructure;

#nullable disable

namespace MoodTracker.Infrastructure.Migrations
{
    [DbContext(typeof(MoodTrackerDbContext))]
    partial class MoodTrackerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("MoodTracker.Infrastructure.MoodEntryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Emoji")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<string>("Emotion")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("MoodKey")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("MoodName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sentiment")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimestampUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TimestampUtc");

                    b.ToTable("MoodEntries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            CreatedAt = new DateTime(2025, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            Emoji = "😄",
                            Message = "Seed: Kicking off the year with good vibes!",
                            MoodKey = "happy",
                            MoodName = "Happy",
                            Sentiment = "Positive",
                            TimestampUtc = new DateTime(2025, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2025, 1, 1, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            CreatedAt = new DateTime(2025, 1, 2, 12, 0, 0, 0, DateTimeKind.Utc),
                            Emoji = "😌",
                            Message = "Seed: Steady and balanced.",
                            MoodKey = "calm",
                            MoodName = "Calm",
                            Sentiment = "Positive",
                            TimestampUtc = new DateTime(2025, 1, 2, 12, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2025, 1, 2, 12, 0, 0, 0, DateTimeKind.Utc)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
